"""Initial migration: create chat and document tables

Revision ID: 870f3087582d
Revises: 
Create Date: 2025-09-07 13:59:01.291135

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision: str = '870f3087582d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_sessions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_pinned', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chat_sessions_client_created', 'chat_sessions', ['client_id', 'created_at'], unique=False)
    op.create_index('idx_chat_sessions_tags', 'chat_sessions', ['tags'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_chat_sessions_client_id'), 'chat_sessions', ['client_id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('document_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_created', 'documents', ['created_at'], unique=False)
    op.create_index('idx_documents_status', 'documents', ['status'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('embedding_cache',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=384), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_embedding_cache_hash', 'embedding_cache', ['content_hash'], unique=False)
    op.create_index('idx_embedding_cache_model', 'embedding_cache', ['model_name'], unique=False)
    op.create_index(op.f('ix_embedding_cache_content_hash'), 'embedding_cache', ['content_hash'], unique=True)
    op.create_index(op.f('ix_embedding_cache_id'), 'embedding_cache', ['id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('session_id', sa.BigInteger(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('feedback', sa.String(length=10), nullable=True),
    sa.Column('feedback_comment', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chat_messages_session_role_created', 'chat_messages', ['session_id', 'role', 'created_at'], unique=False)
    op.create_index('idx_chat_messages_user_created', 'chat_messages', ['created_at'], unique=False, postgresql_where="role = 'user'")
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    op.create_table('chat_session_embeddings',
    sa.Column('session_id', sa.BigInteger(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=384), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index('idx_chat_session_embeddings_hnsw', 'chat_session_embeddings', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.create_table('document_chunks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('document_id', sa.BigInteger(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=384), nullable=False),
    sa.Column('chunk_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_chunks_document_index', 'document_chunks', ['document_id', 'chunk_index'], unique=False)
    op.create_index('idx_document_chunks_embedding_hnsw', 'document_chunks', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64}, postgresql_ops={'embedding': 'vector_cosine_ops'})
    op.create_index(op.f('ix_document_chunks_id'), 'document_chunks', ['id'], unique=False)
    # op.drop_table('users')  # 테이블이 존재하지 않아서 주석 처리
    # op.drop_table('companies')  # 테이블이 존재하지 않아서 주석 처리
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='users_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_table('companies',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='companies_pkey')
    )
    op.drop_index(op.f('ix_document_chunks_id'), table_name='document_chunks')
    op.drop_index('idx_document_chunks_embedding_hnsw', table_name='document_chunks', postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64})
    op.drop_index('idx_document_chunks_document_index', table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index('idx_chat_session_embeddings_hnsw', table_name='chat_session_embeddings', postgresql_using='hnsw', postgresql_with={'m': 16, 'ef_construction': 64})
    op.drop_table('chat_session_embeddings')
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_index('idx_chat_messages_user_created', table_name='chat_messages', postgresql_where="role = 'user'")
    op.drop_index('idx_chat_messages_session_role_created', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_embedding_cache_id'), table_name='embedding_cache')
    op.drop_index(op.f('ix_embedding_cache_content_hash'), table_name='embedding_cache')
    op.drop_index('idx_embedding_cache_model', table_name='embedding_cache')
    op.drop_index('idx_embedding_cache_hash', table_name='embedding_cache')
    op.drop_table('embedding_cache')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index('idx_documents_status', table_name='documents')
    op.drop_index('idx_documents_created', table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_client_id'), table_name='chat_sessions')
    op.drop_index('idx_chat_sessions_tags', table_name='chat_sessions', postgresql_using='gin')
    op.drop_index('idx_chat_sessions_client_created', table_name='chat_sessions')
    op.drop_table('chat_sessions')
    # ### end Alembic commands ###
